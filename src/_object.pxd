# -*- coding: utf-8 -*-
#
# Copyright 2013 The cygit2 contributors
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2,
# as published by the Free Software Foundation.
#
# In addition to the permissions in the GNU General Public License,
# the authors give you unlimited permission to link the compiled
# version of this file into combinations with other programs,
# and to distribute those combinations without any restriction
# coming from the use of this file.  (The General Public License
# restrictions do apply in other respects; for example, they cover
# modification of the file, and distribution when not linked into
# a combined executable.)
#
# This file is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.

# This code was automatically generated by CWrap version 0.0.0

from _types cimport \
    git_object, \
    git_otype, \
    git_repository

from _oid cimport git_oid


cdef extern from "git2.h":

    int git_object_lookup(git_object **object, git_repository *repo, git_oid *id, git_otype type)

    int git_object_lookup_prefix(git_object **object_out, git_repository *repo, git_oid *id, size_t len, git_otype type)

    git_oid *git_object_id(git_object *obj)

    git_otype git_object_type(git_object *obj)

    git_repository *git_object_owner(git_object *obj)

    void git_object_free(git_object *object)

    char *git_object_type2string(git_otype type)

    git_otype git_object_string2type(char *str)

    int git_object_typeisloose(git_otype type)

    size_t git_object__size(git_otype type)

    int git_object_peel(git_object **peeled, git_object *object, git_otype target_type)
