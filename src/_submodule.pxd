# -*- coding: utf-8 -*-
#
# Copyright 2013 The cygit2 contributors
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2,
# as published by the Free Software Foundation.
#
# In addition to the permissions in the GNU General Public License,
# the authors give you unlimited permission to link the compiled
# version of this file into combinations with other programs,
# and to distribute those combinations without any restriction
# coming from the use of this file.  (The General Public License
# restrictions do apply in other respects; for example, they cover
# modification of the file, and distribution when not linked into
# a combined executable.)
#
# This file is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.

# This code was automatically generated by CWrap version 0.0.0

cdef extern from "git2.h":

    ctypedef git_submodule git_submodule

    cdef struct git_submodule:
        pass

    cdef enum git_submodule_update_t:
        GIT_SUBMODULE_UPDATE_DEFAULT
        GIT_SUBMODULE_UPDATE_CHECKOUT
        GIT_SUBMODULE_UPDATE_REBASE
        GIT_SUBMODULE_UPDATE_MERGE
        GIT_SUBMODULE_UPDATE_NONE

    cdef enum git_submodule_ignore_t:
        GIT_SUBMODULE_IGNORE_DEFAULT
        GIT_SUBMODULE_IGNORE_NONE
        GIT_SUBMODULE_IGNORE_UNTRACKED
        GIT_SUBMODULE_IGNORE_DIRTY
        GIT_SUBMODULE_IGNORE_ALL

    cdef enum git_submodule_status_t:
        GIT_SUBMODULE_STATUS_IN_HEAD
        GIT_SUBMODULE_STATUS_IN_INDEX
        GIT_SUBMODULE_STATUS_IN_CONFIG
        GIT_SUBMODULE_STATUS_IN_WD
        GIT_SUBMODULE_STATUS_INDEX_ADDED
        GIT_SUBMODULE_STATUS_INDEX_DELETED
        GIT_SUBMODULE_STATUS_INDEX_MODIFIED
        GIT_SUBMODULE_STATUS_WD_UNINITIALIZED
        GIT_SUBMODULE_STATUS_WD_ADDED
        GIT_SUBMODULE_STATUS_WD_DELETED
        GIT_SUBMODULE_STATUS_WD_MODIFIED
        GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED
        GIT_SUBMODULE_STATUS_WD_WD_MODIFIED
        GIT_SUBMODULE_STATUS_WD_UNTRACKED

    int git_submodule_lookup(git_submodule **submodule, git_repository *repo, char *name)

    int git_submodule_foreach(git_repository *repo, int (*callback)(git_submodule *, char *, void *), void *payload)

    int git_submodule_add_setup(git_submodule **submodule, git_repository *repo, char *url, char *path, int use_gitlink)

    int git_submodule_add_finalize(git_submodule *submodule)

    int git_submodule_add_to_index(git_submodule *submodule, int write_index)

    int git_submodule_save(git_submodule *submodule)

    git_repository *git_submodule_owner(git_submodule *submodule)

    char *git_submodule_name(git_submodule *submodule)

    char *git_submodule_path(git_submodule *submodule)

    char *git_submodule_url(git_submodule *submodule)

    int git_submodule_set_url(git_submodule *submodule, char *url)

    git_oid *git_submodule_index_id(git_submodule *submodule)

    git_oid *git_submodule_head_id(git_submodule *submodule)

    git_oid *git_submodule_wd_id(git_submodule *submodule)

    git_submodule_ignore_t git_submodule_ignore(git_submodule *submodule)

    git_submodule_ignore_t git_submodule_set_ignore(git_submodule *submodule, git_submodule_ignore_t ignore)

    git_submodule_update_t git_submodule_update(git_submodule *submodule)

    git_submodule_update_t git_submodule_set_update(git_submodule *submodule, git_submodule_update_t update)

    int git_submodule_fetch_recurse_submodules(git_submodule *submodule)

    int git_submodule_set_fetch_recurse_submodules(git_submodule *submodule, int fetch_recurse_submodules)

    int git_submodule_init(git_submodule *submodule, int overwrite)

    int git_submodule_sync(git_submodule *submodule)

    int git_submodule_open(git_repository **repo, git_submodule *submodule)

    int git_submodule_reload(git_submodule *submodule)

    int git_submodule_reload_all(git_repository *repo)

    int git_submodule_status(unsigned int *status, git_submodule *submodule)

    int git_submodule_location(unsigned int *location_status, git_submodule *submodule)
