# -*- coding: utf-8 -*-
#
# Copyright 2013 The cygit2 contributors
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2,
# as published by the Free Software Foundation.
#
# In addition to the permissions in the GNU General Public License,
# the authors give you unlimited permission to link the compiled
# version of this file into combinations with other programs,
# and to distribute those combinations without any restriction
# coming from the use of this file.  (The General Public License
# restrictions do apply in other respects; for example, they cover
# modification of the file, and distribution when not linked into
# a combined executable.)
#
# This file is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.

# This code was automatically generated by CWrap version 0.0.0

from _types cimport \
    git_commit, \
    git_repository, \
    git_time_t, \
    git_signature, \
    git_tree

from _oid cimport git_oid


cdef extern from "git2.h":

    int git_commit_lookup(git_commit **commit, git_repository *repo, git_oid *id)

    int git_commit_lookup_prefix(git_commit **commit, git_repository *repo, git_oid *id, size_t len)

    void git_commit_free(git_commit *commit)

    git_oid *git_commit_id(git_commit *commit)

    char *git_commit_message_encoding(git_commit *commit)

    char *git_commit_message(git_commit *commit)

    git_time_t git_commit_time(git_commit *commit)

    int git_commit_time_offset(git_commit *commit)

    git_signature *git_commit_committer(git_commit *commit)

    git_signature *git_commit_author(git_commit *commit)

    int git_commit_tree(git_tree **tree_out, git_commit *commit)

    git_oid *git_commit_tree_id(git_commit *commit)

    unsigned int git_commit_parentcount(git_commit *commit)

    int git_commit_parent(git_commit **out, git_commit *commit, unsigned int n)

    git_oid *git_commit_parent_id(git_commit *commit, unsigned int n)

    int git_commit_nth_gen_ancestor(git_commit **ancestor, git_commit *commit, unsigned int n)

    int git_commit_create(git_oid *id, git_repository *repo, char *update_ref, git_signature *author, git_signature *committer, char *message_encoding, char *message, git_tree *tree, int parent_count, git_commit **parents)

    int git_commit_create_v(git_oid *id, git_repository *repo, char *update_ref, git_signature *author, git_signature *committer, char *message_encoding, char *message, git_tree *tree, int parent_count)
