# -*- coding: utf-8 -*-
#
# Copyright 2013 The cygit2 contributors
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2,
# as published by the Free Software Foundation.
#
# In addition to the permissions in the GNU General Public License,
# the authors give you unlimited permission to link the compiled
# version of this file into combinations with other programs,
# and to distribute those combinations without any restriction
# coming from the use of this file.  (The General Public License
# restrictions do apply in other respects; for example, they cover
# modification of the file, and distribution when not linked into
# a combined executable.)
#
# This file is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.

# This code was automatically generated by CWrap version 0.0.0

from _types cimport \
    git_push, \
    git_repository, \
    git_remote_head, \
    git_remote

from _indexer cimport git_transfer_progress


cdef extern from "git2.h":

    cdef enum git_credtype_t:
        GIT_CREDTYPE_USERPASS_PLAINTEXT

    cdef struct git_cred:
        git_credtype_t credtype
        void (*free)(git_cred *)

    ctypedef git_cred git_cred

    cdef struct git_cred_userpass_plaintext:
        git_cred parent
        char *username
        char *password

    ctypedef git_cred_userpass_plaintext git_cred_userpass_plaintext

    int git_cred_userpass_plaintext_new(git_cred **out, char *username, char *password)

    ctypedef int (*git_cred_acquire_cb)(git_cred **, char *, char *, unsigned int, void *)

    cdef enum git_transport_flags_t:
        GIT_TRANSPORTFLAGS_NONE
        GIT_TRANSPORTFLAGS_NO_CHECK_CERT

    ctypedef void (*git_transport_message_cb)(char *, int, void *)

    cdef struct git_transport:
        unsigned int version
        int (*set_callbacks)(git_transport *, git_transport_message_cb, git_transport_message_cb, void *)
        int (*connect)(git_transport *, char *, git_cred_acquire_cb, void *, int, int)
        int (*ls)(git_transport *, git_headlist_cb, void *)
        int (*push)(git_transport *, git_push *)
        int (*negotiate_fetch)(git_transport *, git_repository *, git_remote_head **, size_t)
        int (*download_pack)(git_transport *, git_repository *, git_transfer_progress *, git_transfer_progress_callback, void *)
        int (*is_connected)(git_transport *)
        int (*read_flags)(git_transport *, int *)
        void (*cancel)(git_transport *)
        int (*close)(git_transport *)
        void (*free)(git_transport *)

    ctypedef git_transport git_transport

    int git_transport_new(git_transport **out, git_remote *owner, char *url)

    int git_transport_valid_url(char *url)

    ctypedef int (*git_transport_cb)(git_transport **, git_remote *, void *)

    int git_transport_dummy(git_transport **out, git_remote *owner, void *payload)

    int git_transport_local(git_transport **out, git_remote *owner, void *payload)

    int git_transport_smart(git_transport **out, git_remote *owner, void *payload)

    cdef enum git_smart_service_t:
        GIT_SERVICE_UPLOADPACK_LS
        GIT_SERVICE_UPLOADPACK
        GIT_SERVICE_RECEIVEPACK_LS
        GIT_SERVICE_RECEIVEPACK

    cdef struct git_smart_subtransport_stream:
        git_smart_subtransport *subtransport
        int (*read)(git_smart_subtransport_stream *, char *, size_t, size_t *)
        int (*write)(git_smart_subtransport_stream *, char *, size_t)
        void (*free)(git_smart_subtransport_stream *)

    ctypedef git_smart_subtransport_stream git_smart_subtransport_stream

    cdef struct git_smart_subtransport:
        int (*action)(git_smart_subtransport_stream **, git_smart_subtransport *, char *, git_smart_service_t)
        int (*close)(git_smart_subtransport *)
        void (*free)(git_smart_subtransport *)

    ctypedef git_smart_subtransport git_smart_subtransport

    ctypedef int (*git_smart_subtransport_cb)(git_smart_subtransport **, git_transport *)

    cdef struct git_smart_subtransport_definition:
        git_smart_subtransport_cb callback
        unsigned int rpc

    ctypedef git_smart_subtransport_definition git_smart_subtransport_definition

    int git_smart_subtransport_http(git_smart_subtransport **out, git_transport *owner)

    int git_smart_subtransport_git(git_smart_subtransport **out, git_transport *owner)
