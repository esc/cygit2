import glob
import os

from cwrap.config import Config, File

GCCXML_INCLUDES = ['./include']


if __name__ == '__main__':
    for f in glob.glob('_*.pxd'):
        os.unlink(f)
    files = glob.glob('./include/git2/*.h')
    files.remove('./include/git2/stdint.h')
    files.remove('./include/git2/inttypes.h')
    config = Config('gccxml', files=[File(n) for n in files],
                    include_dirs=GCCXML_INCLUDES)
    config.generate()

    with open('_git2.pxd', 'wb') as outfh:
        outfh.write('''# This code was automatically generated by CWrap version 0.0.0

from libc.stdint cimport int64_t, intmax_t, uintmax_t, uint32_t, uint16_t
from libc.stddef cimport wchar_t


cdef extern from "git2.h":
''')

        for filename in [
                "_common.pxd",
                "_threads.pxd",
                "_errors.pxd",

                "_types.pxd",

                "_oid.pxd",
                "_signature.pxd",
                "_odb_backend.pxd",
                "_indexer.pxd",
                "_odb.pxd",

                "_repository.pxd",
                "_revwalk.pxd",
                "_merge.pxd",
                "_graph.pxd",
                "_strarray.pxd",
                "_refs.pxd",
                "_reflog.pxd",
                "_revparse.pxd",

                "_object.pxd",
                "_blob.pxd",
                "_commit.pxd",
                "_tag.pxd",
                "_tree.pxd",
                "_diff.pxd",

                "_index.pxd",
                "_config.pxd",
                "_transport.pxd",
                "_net.pxd",
                "_remote.pxd",
                "_checkout.pxd",
                "_clone.pxd",
                "_push.pxd",

                "_attr.pxd",
                "_ignore.pxd",
                "_branch.pxd",
                "_refspec.pxd",
                "_net.pxd",
                "_status.pxd",
                "_submodule.pxd",
                "_notes.pxd",
                "_reset.pxd",
                "_message.pxd",
                "_pack.pxd",
                "_stash.pxd",
                ]:
            with open(filename, 'rb') as infh:
                for line in infh.readlines()[3:]:
                    outfh.write(line)
